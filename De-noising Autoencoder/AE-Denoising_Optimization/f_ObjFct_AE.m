
function val_err= f_ObjFct_AE(X_train,target_train,M,options,ncL,nf1,nf2,nf3,nf4,fz1,fz2,fz3,fz4)

% minimal structure

layers_str = [
              'layers = ' ...
              '[imageInputLayer([2*M 2*M 1])' newline ...
              'convolution2dLayer(fz1,nf1,''Padding'',''same'')' newline ...
              'batchNormalizationLayer' newline ...
              'reluLayer' newline ...
              'maxPooling2dLayer(2,''Stride'',2,''Padding'',''same'')' newline ...
              'convolution2dLayer(fz2,nf2,''Padding'',''same'')' newline ...
              'batchNormalizationLayer' newline ...
              'reluLayer' newline ...%%%
              'transposedConv2dLayer(fz2,nf2,''Stride'',2,''Cropping'',''same'')' newline ...
              'batchNormalizationLayer' newline ...
              'reluLayer' newline ...
              'convolution2dLayer(fz1,1,''Padding'',''same'')' newline ...
              'batchNormalizationLayer' newline ...
              'sigmoidLayer' newline ...
              'regressionLayer];' ...
             ];

% adding layers

for i=1:ncL
    newL = [
            'maxPooling2dLayer(2,''Stride'',2,''Padding'',''same'')' newline ...
            'convolution2dLayer(fz' int2str(i+2) ',nf' int2str(i+2) ',''Padding'',''same'')' newline ...
            'batchNormalizationLayer' newline ...
            'reluLayer' newline ...
            'transposedConv2dLayer(fz' int2str(i+2) ',nf' int2str(i+2) ',''Stride'',2,''Cropping'',''same'')' newline ...
            'batchNormalizationLayer' newline ...
            'reluLayer' newline ...
           ]; 
    layers_str = [layers_str(1:246+(i-1)*128), newL, layers_str(247+(i-1)*128:end)];
end

eval(layers_str);

[~, info] = trainNetwork(X_train,target_train,layers,options);
val_err = info.FinalValidationLoss;