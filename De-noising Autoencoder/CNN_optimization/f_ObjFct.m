
function val_err = f_ObjFct(X_train,target_train,M,options,ncL,nfL,nf1,nf2,nf3,fz1,fz2,fz3,fcz1,fcz2)

% minimal structure

layers_str = [
              'layers = ' ...
              '[imageInputLayer([2*M 2*M 1])' newline ...
              'convolution2dLayer(fz1,nf1,''Padding'',''same'')' newline ...
              'batchNormalizationLayer' newline ...
              'reluLayer' newline ...
              'averagePooling2dLayer(2,''Stride'',2,''Padding'',''same'')' newline ...
              'fullyConnectedLayer(fcz1)' newline ...
              'reluLayer' newline ...
              'batchNormalizationLayer' newline ...
              'fullyConnectedLayer(M)' newline ...
              'softmaxLayer' newline ...
              'classificationLayer];'
             ];

% adding conv layers

newL = '';
for i=1:ncL
    newL = [
            newL ...
            'convolution2dLayer(fz' int2str(i+1) ',nf' int2str(i+1) ',''Padding'',''same'')' newline ...
            'batchNormalizationLayer' newline ...
            'reluLayer' newline ...
            'averagePooling2dLayer(2,''Stride'',2,''Padding'',''same'')' newline ...
           ]; 
end
layers_str = [layers_str(1:171), newL, layers_str(172:end)];

% adding FC layers

newL = '';
for i=1:nfL
    newL = [ 
            newL ...
            'fullyConnectedLayer(fcz' int2str(i+1) ')' newline ...
            'reluLayer' newline ...
            'batchNormalizationLayer' newline ...
           ]; 
end
layers_str = [layers_str(1:end-57), newL, layers_str(end-56:end)];

eval(layers_str);

[~, info] = trainNetwork(X_train,target_train,layers,options);
val_err = 100-info.FinalValidationAccuracy;