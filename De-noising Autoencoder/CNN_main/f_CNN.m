function layers = f_CNN(M)
%% lambda=0.7
%%
layers = [ imageInputLayer([2*M 2*M 1], "Normalization","none") ...
    % 1st convolutional layer:
    ;convolution2dLayer(3,85,'Name','Conv1','Padding','same')...
    ; batchNormalizationLayer ...
    ; reluLayer ...
    ; averagePooling2dLayer(2,'Stride',2,'Padding','same')...
    ; convolution2dLayer(3,38,'Padding','same')...
    ; batchNormalizationLayer ...
    ; reluLayer ...
    ; averagePooling2dLayer(2,'Stride',2,'Padding','same')...    
    ; fullyConnectedLayer(590) ... 
    ; reluLayer...
    ; batchNormalizationLayer ...
    ; fullyConnectedLayer(M) ...
    ;softmaxLayer...
    ;classificationLayer...
    ];
%% lambda=0.7
%%
% layers = [ imageInputLayer([2*M 2*M 1], "Normalization","none") ...
%     % 1st convolutional layer:
%     ;convolution2dLayer(16,20,'Name','Conv1','Padding','same')...
%     ; batchNormalizationLayer ...
%     ; reluLayer ...
%     ; averagePooling2dLayer(2,'Stride',2,'Padding','same')...
%     ; convolution2dLayer(7,7,'Padding','same')...
%     ; batchNormalizationLayer ...
%     ; reluLayer ...
%     ; averagePooling2dLayer(2,'Stride',2,'Padding','same')...    
%     ; fullyConnectedLayer(55) ... 
%     ; reluLayer...
%     ; batchNormalizationLayer ...
%     ; fullyConnectedLayer(566) ... 
%     ; reluLayer...
%     ; batchNormalizationLayer ...
%     ; fullyConnectedLayer(M) ...
%     ;softmaxLayer...
%     ;classificationLayer...
%     ];
%% lambda=0.25
%%

% layers = [ imageInputLayer([2*M 2*M 1], "Normalization","none") ...
%     % 1st convolutional layer:
%     ;convolution2dLayer(4,92,'Name','Conv1','Padding','same')...
%     ; batchNormalizationLayer ...
%     ; reluLayer ...
%     ; averagePooling2dLayer(2,'Stride',2,'Padding','same')...
%     ; convolution2dLayer(3,38,'Padding','same')...
%     ; batchNormalizationLayer ...
%     ; reluLayer ...
%     ; averagePooling2dLayer(2,'Stride',2,'Padding','same')...    
%     ; fullyConnectedLayer(679) ... 
%     ; reluLayer...
%     ; batchNormalizationLayer ...
%     ; fullyConnectedLayer(M) ...
%     ;softmaxLayer...
%     ;classificationLayer...
%     ];